//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Gato.ServicioGato {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:TikTakToe", ConfigurationName="ServicioGato.TikTakToePort")]
    public interface TikTakToePort {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#turno", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string turno(int coordenadaX, int coordenadaY, string tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#turno", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> turnoAsync(int coordenadaX, int coordenadaY, string tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#revisarGanador", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string revisarGanador(string tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#revisarGanador", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> revisarGanadorAsync(string tablero);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#obtenerRecords", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        string obtenerRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#obtenerRecords", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        System.Threading.Tasks.Task<string> obtenerRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#verificarRecord", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        void verificarRecord(string idUsuario, int tiempoActualSegundos);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:TikTakToe#TikTakToe#verificarRecord", ReplyAction="*")]
        System.Threading.Tasks.Task verificarRecordAsync(string idUsuario, int tiempoActualSegundos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TikTakToePortChannel : Gato.ServicioGato.TikTakToePort, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TikTakToePortClient : System.ServiceModel.ClientBase<Gato.ServicioGato.TikTakToePort>, Gato.ServicioGato.TikTakToePort {
        
        public TikTakToePortClient() {
        }
        
        public TikTakToePortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TikTakToePortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TikTakToePortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TikTakToePortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string turno(int coordenadaX, int coordenadaY, string tablero) {
            return base.Channel.turno(coordenadaX, coordenadaY, tablero);
        }
        
        public System.Threading.Tasks.Task<string> turnoAsync(int coordenadaX, int coordenadaY, string tablero) {
            return base.Channel.turnoAsync(coordenadaX, coordenadaY, tablero);
        }
        
        public string revisarGanador(string tablero) {
            return base.Channel.revisarGanador(tablero);
        }
        
        public System.Threading.Tasks.Task<string> revisarGanadorAsync(string tablero) {
            return base.Channel.revisarGanadorAsync(tablero);
        }
        
        public string obtenerRecords() {
            return base.Channel.obtenerRecords();
        }
        
        public System.Threading.Tasks.Task<string> obtenerRecordsAsync() {
            return base.Channel.obtenerRecordsAsync();
        }
        
        public void verificarRecord(string idUsuario, int tiempoActualSegundos) {
            base.Channel.verificarRecord(idUsuario, tiempoActualSegundos);
        }
        
        public System.Threading.Tasks.Task verificarRecordAsync(string idUsuario, int tiempoActualSegundos) {
            return base.Channel.verificarRecordAsync(idUsuario, tiempoActualSegundos);
        }
    }
}
